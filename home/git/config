[alias]
	st = status
	ci = commit
	co = checkout
	go = checkout
	br = branch
	sh = !git-sh
	sub = submodule
	mb = merge-base HEAD
	ff = pull --ff-only
	up = !git pull && git submodule sync && git submodule init && git submodule update && git sub
	patch = format-patch --stdout
	show-branches = !git show-branch origin/master $(git branch | cut -c3-)
	branches = !git show-branch --color=always | less -SR
	br = branch --sort=-committerdate
	t = tag --sort=-committerdate
	delete-merged-branches = !git branch --merged origin/master --format '%(refname:short)' | tr '\\n' '\\0' | xargs -0 --no-run-if-empty git branch -d
	root = rev-parse --show-toplevel
	pushall = !git push && git push --tags
	fchanges = !git fetch && git changes
	changes = !git show-branch HEAD origin/"$(git name-rev HEAD | awk '{print $2}')"
	l = log --color --graph --pretty=format:'%C(yellow)%h%Creset -%C(bold blue)%d%Creset %s %Cgreen(%cr) %C(bold)<%an>%Creset' --abbrev-commit --date=relative --date-order
	lb = log --color --graph --pretty=format:'%C(yellow)%h%Creset -%C(bold blue)%d%Creset %s %Cgreen(%cr) %C(bold)<%an>%Creset' --abbrev-commit --date=relative --date-order --branches
	lm = log --color --graph --pretty=format:'%C(yellow)%h%Creset -%C(bold blue)%d%Creset %s %Cgreen(%cr) %C(bold)<%an>%Creset' --abbrev-commit --date=relative --topo-order --merges
	pr = "!f() { git fetch -fu ${2:-origin} refs/pull/$1/head:pr/$1 }; f"
	recap = log --all --oneline --no-merges
[color]
	branch = auto
	diff = auto
	interactive = auto
	status = auto
	showbranch = auto
	sh = auto
	ui = auto
[color "branch"]
	current = green
	remote = cyan
[push]
	default = current
[color "status"]
	added = green
	changed = red
	untracked = cyan
[merge]
	tool = vimdiff
[mergetool "vimdiff"]
	cmd = nvim -d $LOCAL $BASE $REMOTE $MERGED -c '$wincmd w' -c 'wincmd J' -c ':diffoff' -c ':set hlsearch' -c '/^[<=>]\\{7\\}.*'
[mergetool]
	keepBackup = false
[user]
	name = Tim Cuthbertson
	email = tim@gfxmonk.net
[core]
	excludesfile = ~/.gitignore
	sharedRepository = group
[guitool "gvim remote tab"]
	cmd = gvim --remote-tab \"$FILENAME\"
	noconsole = yes
	needsfile = yes
