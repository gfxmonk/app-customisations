#!/bin/bash

irank_base="$HOME/Music/irank"

function overwrite_android_db {
	scp "$irank_base/irank.sqlite" "$dest/"
}

function do_sync {
	playlists="$(grep -v '^#' ~/.config/irank/android-playlists | tr '\n' ' ')"
	irank export "$@" -d "$dest" --limit 6.0 --merge ~/Music/Other/Phone -- $playlists
	overwrite_android_db

	# echo '-------- DISK USAGE: -----------'
	# du -h "$dest"
	size=$(run_sh du -hs "$host_path" | cut -f1)
	# remaining=$(df -h "$dest" | tail -n1 | awk '{print $4}')
	notify-send "Android music sync finished" "$size used for $dest"
}

function run_sh {
	if [ -n "$host" ]; then
		ssh "$host" -- "$@"
	else
		sh -c "$@"
	fi
}

function num_remote_rating_changes {
	if [ -r "$1" ]; then
		irank rating-sync --count "$1"
	else
		echo 0
	fi
}

function apply_remote_rating_changes {
	echo "updating ratings from device"

	local_db="$1"
	num_updates="$(num_remote_rating_changes "$local_db")"
	if [ "$num_updates" -gt 0 ]; then
		echo "applying $num_updates updates..."
		irank rating-sync --no "$local_db" || ( \
			zenity --question --no-markup --text='Rating update FAILED. Do you want to continue, ERASING all failed ratings?' --cancel-label='Cancel' --ok-label='ERASE' && \
				zenity --question --no-markup --text='SERIOUSLY?' --cancel-label='No!' --ok-label='Yes, ERASE ratings')

		echo "updating playlists after rating update"
		irank db
		echo "copying new irank DB to device"
		overwrite_android_db
	fi
}


if [ -z "$irank_test" ]; then
	set -e
	do_update_playlists=1
	do_update_ratings=1
	ask=0
	headless=0
	if [ "$1" = "--help" ]; then
		echo "Usage: $0 [--quick|--ask]" >&2
		exit 0
	elif [ "$1" = "--headless" ]; then
		headless=1
		do_update_ratings=0
		shift
	elif [ "$1" = "--quick" ]; then
		do_update_playlists=0
		shift
	elif [ "$1" = "--ask" ]; then
		ask=1
		shift
	fi

	dest="$1"
	if [ -z "$dest" ]; then
		echo "Note: no destination given"
		dest=$(grep '^android:' ~/.config/irank/paths | cut -c10-)
		echo "using: $dest"
	fi

	if echo "$dest" | fgrep -q ':'; then
		host="$(echo "$dest" | cut -d ":" -f 1)"
		host_path="$(echo "$dest" | cut -d ":" -f 2)"
	else
		host=""
		host_path=""
	fi
	echo HOST: "$host"
	echo DEST: "$host_path"

	set -x
	[ -n "$host" -o -d "$dest" ]

	sqlite_db=/tmp/irank.sqlite
	if [ "$do_update_ratings" -eq 1 ]; then
		has_db="$(ssh $host -- if [ -f "$host_path"/irank.sqlite ]\; then echo OK\; else echo NO\; fi)"
		if [ "$has_db" = "NO" ]; then
			do_update_ratings=0
			num_updates="0"
		else
			[ "$has_db" = "OK" ]
			scp "$dest/irank.sqlite" "$sqlite_db"
			num_updates="$(num_remote_rating_changes "$sqlite_db")"
		fi
	fi

	if [ "$ask" = 1 ]; then
		resp=$(echo -e "ALL\nSync all\nRATINGS\nUpdate ratings only ($num_updates)" | zenity --list --title="iRank android" --column="action" --column=foo --text="iRank android sync:\nSelect action to perform" --hide-header --hide-column=1) || exit 0
		[ "$resp" = 'ALL' ] || do_update_playlists=0
	fi

	if [ "$do_update_ratings" -eq 1 ]; then apply_remote_rating_changes "$sqlite_db"; fi
	if [ "$do_update_playlists" -eq 1 ]; then
		if [ "$headless" -eq 1 ]; then
			do_sync
		else
			do_sync --interactive
		fi
	fi
else
	echo "# (sourced)"
	dest="$HOME/.tmp/android"
fi
